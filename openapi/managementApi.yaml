openapi: 3.0.0
info:
  title: LoginID Management API 
  description: LoginID documentation 
  version: 1.0.0
  # Contact information: name, email, URL.
  contact:
    name: LoginID Support
    email: support@loginid.io
    url: https://loginid.io
  # Name of the license and a URL to the license description.
  license:
    name: LoginID
    url: https://loginid.io
    
security:
  - authToken: []  
  
# LoginID Management API   
paths:
  # OpenAPI documents all need a paths element
  /manage/users/delete:
    post:
      summary: Delete a user account by username
      description: '**Scope:** users.delete'
      tags:
        - Users
      requestBody:
         content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
      parameters:
        - in: header
          name: X-API-Key
          description: Management API key which is created on LoginID admin dashboard.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User successfully deleted. 
        '400':
          description: Error returns from application related problem
          content:
            application/json:    
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: user_not_deleted
                  message:
                    type: string
                    example: Failed to delete the user
        '401':
          description: Invalid token.
          content:
            application/json:    
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: unauthorized
                  message:
                    type: string
                    example: Invalid authorization token        
        '404':
          description: User not found.
          content:
            application/json:    
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: user_not_found
                  message:
                    type: string
                    example: User not found   
        '5XX':
          description: Error returns from system related problem 
          content:
            application/json:    
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error 

  /manage/users/{user_id}:
    delete:
      summary:  Delete a user account by user id 
      description: '**Scope:** users.delete'
      tags:
        - Users
      parameters:
        - in: header
          name: X-API-Key
          description: Management API key which is created on LoginID admin dashboard.
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: Unique ID of the user to be deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User account deleted successfully.
        '400':
          description: Error returns from application related problem
        '401':
          description: Invalid token.
          content:
            application/json:    
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: unauthorized
                  message:
                    type: string
                    example: Invalid authorization token        
        '404':
          description: User not found.
          content:
            application/json:    
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: user_not_found
                  message:
                    type: string
                    example: User not found   
        '5XX':
          description: Error returns from system related problem 
          content:
            application/json:    
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error 
  /manage/users/{user_id}/activate:
    put:
      summary: Activate a user account 
      description: '**Scope:** users.activate'
      tags:
        - Users
      parameters:
        - in: header
          name: X-API-Key
          description: Management API key which is created on LoginID admin dashboard.
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: Unique ID of the user to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User account activated successfully.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/User'
        '400':
          description: Error returns from application related problem
        '401':
          description: Invalid token.
          content:
            application/json:    
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: unauthorized
                  message:
                    type: string
                    example: Invalid authorization token
        '404':
          description: User not found.
          content:
            application/json:    
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: user_not_found
                  message:
                    type: string
                    example: User not found   
        '5XX':
          description: Error returns from system related problem
          content:
            application/json:    
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
  /manage/users/{user_id}/deactivate:
    put:
      summary: Deactivate a user account
      description: '**Scope:** users.deactivate'
      tags:
        - Users
      parameters:
        - in: header
          name: X-API-Key
          description: Management API key which is created on LoginID admin dashboard.
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: Unique ID of the user to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User account deactivated successfully.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/User'
        '400':
          description: Error returns from application related problem
        '401':
          description: Invalid token.
          content:
            application/json:    
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: unauthorized
                  message:
                    type: string
                    example: Invalid authorization token  
        '404':
          description: User not found.
          content:
            application/json:    
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: user_not_found
                  message:
                    type: string
                    example: User not found
        '5XX':
          description: Error returns from system related problem
          content:
            application/json:    
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error
                    
  /manage/users/{user_id}/email-verification/dispatch:
    delete:
      summary: Send email verificaiton request to a user 
      description: '**Scope:** users.email-verification.dispatch'
      tags:
        - Users
      parameters:
        - in: header
          name: X-API-Key
          description: Management API key which is created on LoginID admin dashboard.
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: Unique ID of the user to be deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Email verification is dispatched successfully.
        '400':
          description: Error returns from application related problem
        '401':
          description: Invalid token.
          content:
            application/json:    
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: unauthorized
                  message:
                    type: string
                    example: Invalid authorization token
        '5XX':
          description: Error returns from system related problem
          content:
            application/json:    
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal server error

# Define the security scheme type (HTTP bearer)
components:
  securitySchemes:
    authToken:            
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        client_id:
          type: string
        username:
          type: string
        status:
          type: string
        type:
          type: string
        namspace_id:
          type: string
        created_at:
          type: string
          format: date
            